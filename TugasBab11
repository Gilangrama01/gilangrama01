#include <iostream>
#include <conio.h>

using namespace std;
/* run this program using the console pauser or add your own getch, system("pause") or input loop */


class Simpul
{
	public:
		double dData;
		Simpul* pBrktnya;
		Simpul* pSblmnya;
		
	public:
		Simpul(double dd):
			dData(dd), pBrktnya(NULL), pSblmnya(NULL)
			{}
			
			void tampilSenarai()
			{
				cout<<dData<<"";
			}
};


class SenaraiBerantaiGanda
{
	private:
		Simpul*pPertama;
		Simpul*pAkhir;
		
	public:
		SenaraiBerantaiGanda():
			pPertama(NULL), pAkhir(NULL)
			{}
				~SenaraiBerantaiGanda()
				{
					Simpul* pSkrg = pPertama;
					while(pSkrg != NULL)
					{
						Simpul* pLama = pSkrg;
						pSkrg = pSkrg->pBrktnya;
						delete pLama;
					}
				}
				
				bool apaKosong()
				{
					return pPertama == NULL;
				}
				
				void sisipPertama(double dd)
				{
					Simpul* pSimpulBaru = new Simpul(dd);
					if(apaKosong())
						pAkhir = pSimpulBaru;
					else
						pPertama->pSblmnya = pSimpulBaru;
						pSimpulBaru->pBrktnya = pPertama;
						pPertama = pSimpulBaru;
				}
				
				void sisipAkhir(double dd)
				{
					Simpul*pSimpulBaru = new Simpul(dd);
					if(apaKosong())
						pPertama = pSimpulBaru;
					else
					{
						pAkhir->pBrktnya = pSimpulBaru;
						pSimpulBaru->pSblmnya = pAkhir; 
				}
				pAkhir = pSimpulBaru;
				}
				
				void hapusPertama()
				{
					Simpul* pTemp = pPertama;
					if(pPertama->pBrktnya == NULL)
						pAkhir = NULL;
					else
						pPertama->pBrktnya->pSblmnya = NULL;
						pPertama = pPertama->pBrktnya;
						delete pTemp;
				}
				
				void hapusAkhir()
				{
					Simpul* pTemp =pAkhir;
					if(pPertama->pBrktnya==NULL)
						pPertama=NULL;
					else
						pAkhir->pSblmnya->pBrktnya=NULL;
						pAkhir=pAkhir->pSblmnya;
						delete pTemp;
				}
				
				bool sisipSetelah(double kunci, double dd)
				{
					Simpul*pSkrg = pPertama;
					while(pSkrg->dData != kunci)
					{
						pSkrg = pSkrg->pBrktnya;
						if(pSkrg==NULL)
						return false;
				}
				
				Simpul*pSimpulBaru = new Simpul(dd);
				if(pSkrg==pAkhir)
				{
					pSimpulBaru->pBrktnya = NULL;
					pAkhir = pSimpulBaru;			
					}
				else
				{
					pSimpulBaru->pBrktnya = pSkrg->pBrktnya;
					pSkrg->pBrktnya->pSblmnya = pSimpulBaru;
				}
					pSimpulBaru->pSblmnya = pSkrg;
					pSkrg->pBrktnya = pSimpulBaru;
					return true;
					}
					
				bool hapuskunci(double kunci)
				{
					Simpul* pSkrg= pPertama;
					while(pSkrg->dData != kunci)
					{
					pSkrg = pSkrg->pBrktnya;
					if(pSkrg==NULL)
						return false;
					}
					
					if(pSkrg==pPertama)
					pPertama = pSkrg->pBrktnya;
					else
					pSkrg->pSblmnya->pSblmnya= pSkrg->pSblmnya;
					delete pSkrg;
					return true;
					}	
					
				void tampilMaju()
				{
					cout<<"Senarai(pertama-->akhir):";
					Simpul*pSkrg= pPertama;
					while(pSkrg != NULL)
					{
						pSkrg->tampilSenarai();
						pSkrg= pSkrg->pBrktnya;
					}
					cout<<endl;
				}
				
				void tampilMundur()
				{
					cout<<"Senarai(akhir-->pertama):";
					Simpul* pSkrg = pAkhir;
					while(pSkrg != NULL)
					{
						pSkrg->tampilSenarai();
						pSkrg = pSkrg->pSblmnya;
					}
					cout<<endl;
				}
};


int main() 
{
	SenaraiBerantaiGanda senarai;
	
	senarai.sisipPertama(22);
	senarai.sisipPertama(44);
	senarai.sisipPertama(66);
	
	senarai.sisipAkhir(11);
	senarai.sisipAkhir(33);
	senarai.sisipAkhir(55);
	
	senarai.tampilMaju();
	senarai.tampilMundur();
	
	cout<<"Menghapus Simpul Pertama, Simpul Akhir, dan 11"<<endl;
	senarai.hapusPertama();
	senarai.hapusAkhir();
	senarai.hapuskunci(11);
	
	senarai.tampilMaju();
	
	cout<<"Menyisipkan 77 setelah simpul 22, dan 88 setalah 33"<<endl;
	senarai.sisipSetelah(22, 77);
	senarai.sisipSetelah(33, 88);
	senarai.tampilMaju();
	
	getch();
	return 0;
}
